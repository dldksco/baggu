# openjdk:11-jdk-slim 을 이미지로 사용한다.
FROM openjdk:11-jdk-slim AS builder

# 작업 디렉토리를 /app으로 설정한다.
WORKDIR /app

# 모든 소스코드 (현재 폴더에 있는 소스코드) 를 작업 디렉토리에 복사한다.
COPY . .

# gradlew을 사용하여 build한다.
RUN sed -i 's/mariadb:\/\/localhost/mariadb:\/\/baggu-database-test/g' /app/src/main/resources/application.yml
RUN sed -i 's/host: 127.0.0.1/host: baggu-redis-test/g' /app/src/main/resources/application-SECRET.yml
RUN sed -i 's/host: localhost:9200/host: baggu-elasticsearch-test/g' /app/src/main/resources/application-SECRET.yml
RUN sed -i 's/http:\/\/localhost:3000/https:\/\/test.baggu.shop/g' /app/src/main/resources/application.yml
RUN chmod +x gradlew
RUN ./gradlew -x compileTestJava build

# 빌드가 완료된 jar파일을 작업 디렉토리의 root로 가져온다.
FROM openjdk:11-jdk-slim

WORKDIR /app

RUN mkdir /app/s3
RUN mkdir /app/s3/temp

COPY --from=builder /app/build/libs/*.jar app.jar

# 9999 포트를 사용
EXPOSE 9999

# java -jar app.jar을 이용해서 빌드한 파일을 실행한다.
CMD ["java", "-jar", "app.jar"]